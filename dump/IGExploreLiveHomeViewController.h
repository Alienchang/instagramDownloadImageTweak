//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "IGViewController.h"

#import "IGAnalyticsModule.h"
#import "IGExploreLiveHomeSectionControllerDelegate.h"
#import "IGListAdapterDataSource.h"
#import "IGListAdapterDelegate.h"
#import "IGLiveHomeCoverRefreshManagerDelegate.h"
#import "IGLiveHomeInstaVideoInfoIntervalPullerDelegate.h"
#import "IGNetworkSourceDelegate.h"
#import "IGStoryViewerDelegate.h"
#import "UICollectionViewDelegate.h"
#import "UIScrollViewDelegate.h"
#import "UIViewControllerTransitioningDelegate.h"

@class IGGridCollectionViewLayout, IGListAdapter, IGListCollectionView, IGLiveHomeCoverRefreshManager, IGLiveHomeInstaVideoInfoIntervalPuller, IGLiveHomeLoggingContext, IGNetworkSource, IGRefreshControl, IGStoryViewerPresentationAnimationController, IGUserSession, NSArray, NSCache, NSString;

@interface IGExploreLiveHomeViewController : IGViewController <IGListAdapterDataSource, IGListAdapterDelegate, IGLiveHomeCoverRefreshManagerDelegate, IGLiveHomeInstaVideoInfoIntervalPullerDelegate, IGNetworkSourceDelegate, IGExploreLiveHomeSectionControllerDelegate, IGStoryViewerDelegate, UICollectionViewDelegate, UIScrollViewDelegate, UIViewControllerTransitioningDelegate, IGAnalyticsModule>
{
    IGUserSession *_userSession;
    NSString *_sessionId;
    IGLiveHomeLoggingContext *_loggingContext;
    IGListAdapter *_listAdapter;
    IGListCollectionView *_collectionView;
    IGGridCollectionViewLayout *_collectionViewLayout;
    IGStoryViewerPresentationAnimationController *_animationController;
    IGNetworkSource *_networkSource;
    NSArray *_liveItems;
    IGRefreshControl *_refreshControl;
    IGLiveHomeInstaVideoInfoIntervalPuller *_infoPuller;
    IGLiveHomeCoverRefreshManager *_coverRefreshManager;
    NSCache *_broadcastIdToStatusUpdateCache;
}

- (void).cxx_destruct;
- (id)analyticsModule;
@property(readonly, nonatomic) IGStoryViewerPresentationAnimationController *animationController; // @synthesize animationController=_animationController;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
@property(readonly, nonatomic) NSCache *broadcastIdToStatusUpdateCache; // @synthesize broadcastIdToStatusUpdateCache=_broadcastIdToStatusUpdateCache;
- (id)cellForReelPK:(id)arg1;
@property(readonly, nonatomic) IGListCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(readonly, nonatomic) IGGridCollectionViewLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
- (void)configureCell:(id)arg1 withSnapshotFromCoverView:(id)arg2;
@property(readonly, nonatomic) IGLiveHomeCoverRefreshManager *coverRefreshManager; // @synthesize coverRefreshManager=_coverRefreshManager;
- (void)coverRefreshManager:(id)arg1 responsesDidBecomeReady:(id)arg2;
- (id)coverRefreshRequestsFromUpdates:(id)arg1;
- (void)dealloc;
- (void)didPerformUpdates;
- (id)emptyViewForListAdapter:(id)arg1;
- (void)fetch;
- (void)fetchMore;
- (void)fetchWithLoadMore:(_Bool)arg1;
- (void)infoIntervalPuller:(id)arg1 broadcastUpdatesDidBecomeReady:(id)arg2;
@property(readonly, nonatomic) IGLiveHomeInstaVideoInfoIntervalPuller *infoPuller; // @synthesize infoPuller=_infoPuller;
- (id)initWithUserSession:(id)arg1;
- (id)itemForReelPK:(id)arg1;
@property(readonly, nonatomic) IGListAdapter *listAdapter; // @synthesize listAdapter=_listAdapter;
- (void)listAdapter:(id)arg1 didEndDisplayingObject:(id)arg2 atIndex:(long long)arg3;
- (id)listAdapter:(id)arg1 sectionControllerForObject:(id)arg2;
- (void)listAdapter:(id)arg1 willDisplayObject:(id)arg2 atIndex:(long long)arg3;
- (void)liveHomeSectionController:(id)arg1 didSelectCell:(id)arg2 withModel:(id)arg3;
@property(copy, nonatomic) NSArray *liveItems; // @synthesize liveItems=_liveItems;
@property(retain, nonatomic) IGLiveHomeLoggingContext *loggingContext; // @synthesize loggingContext=_loggingContext;
@property(readonly, nonatomic) IGNetworkSource *networkSource; // @synthesize networkSource=_networkSource;
- (void)networkSource:(id)arg1 didFailWithError:(id)arg2;
- (void)networkSource:(id)arg1 didFetchMoreWithObject:(id)arg2;
- (void)networkSource:(id)arg1 didFetchObject:(id)arg2;
- (id)objectsForListAdapter:(id)arg1;
- (id)objectsMatchingBroadcastIds:(id)arg1;
- (void)presentViewerFromItem:(id)arg1 cell:(id)arg2;
- (void)processFetchedObject:(id)arg1 isLoadMore:(_Bool)arg2;
@property(readonly, nonatomic) IGRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
- (void)refreshLoggingContext;
- (void)removeObjects:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)requestWithMaxID:(id)arg1;
- (void)resetLiveInfoPuller;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
@property(copy, nonatomic) NSString *sessionId; // @synthesize sessionId=_sessionId;
- (void)setupCollectionViewAndAdapter;
- (void)setupPullToRefresh;
- (_Bool)shouldLoadMoreFromNetworkSource:(id)arg1 scrollingToTargetContentOffset:(struct CGPoint)arg2 inScrollView:(id)arg3;
- (id)snapshotImageFromAnimatingCoverView:(id)arg1;
- (void)startLiveInfoPuller;
- (void)stopLiveInfoPuller;
- (void)storyViewer:(id)arg1 didFocusOnReelWithPK:(id)arg2;
- (void)storyViewerDidFinish:(id)arg1;
- (void)unhideVisibleCellsExcept:(id)arg1;
- (void)updateBroadcastStatusCacheWithUpdates:(id)arg1;
- (void)updateLiveInfoPuller;
@property(readonly, nonatomic) IGUserSession *userSession; // @synthesize userSession=_userSession;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)visibleCellMatchingBroadcastUpdateWithId:(id)arg1;
- (void)willPerformUpdates;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

