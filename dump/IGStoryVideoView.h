//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "IGFeedVideoPlayerDelegate.h"
#import "IGImageProgressViewDelegate.h"
#import "IGStoryPlayerMediaViewType.h"

@class FBTimer, IGFeedVideoManager, IGFeedVideoPlayer, IGImageProgressView, IGStoryGradientRingView, IGVideoViewLogger, NSString;

@interface IGStoryVideoView : UIView <IGFeedVideoPlayerDelegate, IGImageProgressViewDelegate, IGStoryPlayerMediaViewType>
{
    _Bool _audioEnabled;
    _Bool _shouldResumePlaybackOnBufferLikelyToKeepUp;
    _Bool _hasStartedPlayback;
    _Bool _isStopped;
    id <IGStoryItemType> _item;
    IGFeedVideoPlayer *_videoPlayer;
    IGFeedVideoManager *_feedVideoManager;
    IGVideoViewLogger *_logger;
    UIView *_videoPlayerView;
    IGStoryGradientRingView *_videoLoadingIndicatorView;
    FBTimer *_loadingIndicatorDelayTimer;
    double _videoShouldStartTime;
    IGImageProgressView *_photoView;
    id <IGStoryPlayerMediaViewDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
- (void)configureWithItem:(id)arg1 delegate:(id)arg2 loggingContext:(id)arg3 config:(id)arg4;
- (void)dealloc;
@property(readonly, nonatomic) __weak id <IGStoryPlayerMediaViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IGFeedVideoManager *feedVideoManager; // @synthesize feedVideoManager=_feedVideoManager;
@property(nonatomic) _Bool hasStartedPlayback; // @synthesize hasStartedPlayback=_hasStartedPlayback;
- (void)hideLoadingIndicator;
- (id)initWithFrame:(struct CGRect)arg1 feedVideoManager:(id)arg2;
- (_Bool)isPlaying;
@property(nonatomic) _Bool isStopped; // @synthesize isStopped=_isStopped;
- (_Bool)isViewFinishedLoading;
@property(readonly, nonatomic) id <IGStoryItemType> item; // @synthesize item=_item;
- (void)layoutSubviews;
@property(retain, nonatomic) FBTimer *loadingIndicatorDelayTimer; // @synthesize loadingIndicatorDelayTimer=_loadingIndicatorDelayTimer;
- (void)logVideoStoppedForReason:(long long)arg1;
@property(retain, nonatomic) IGVideoViewLogger *logger; // @synthesize logger=_logger;
- (double)mediaCurrentTime;
- (struct CGSize)mediaSize;
- (void)pauseWithReason:(long long)arg1;
@property(readonly, nonatomic) IGImageProgressView *photoView; // @synthesize photoView=_photoView;
- (void)play;
- (void)prepareForReuse;
- (void)progressImageView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)progressImageView:(id)arg1 didLoadImage:(id)arg2;
- (void)seekToBeginning;
@property(nonatomic) _Bool shouldResumePlaybackOnBufferLikelyToKeepUp; // @synthesize shouldResumePlaybackOnBufferLikelyToKeepUp=_shouldResumePlaybackOnBufferLikelyToKeepUp;
@property(retain, nonatomic) IGStoryGradientRingView *videoLoadingIndicatorView; // @synthesize videoLoadingIndicatorView=_videoLoadingIndicatorView;
@property(retain, nonatomic) IGFeedVideoPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(retain, nonatomic) UIView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(nonatomic) double videoShouldStartTime; // @synthesize videoShouldStartTime=_videoShouldStartTime;
- (void)showLoadingIndicatorAfterDelay;
- (void)showLoadingIndicatorImmediately;
- (void)stopWithReason:(long long)arg1;
- (id)videoDebugDetails;
- (_Bool)videoHasSound;
- (void)videoPlayer:(id)arg1 didFailToPlaybackWithError:(id)arg2;
- (void)videoPlayer:(id)arg1 didGenerateWarningWithError:(id)arg2;
- (void)videoPlayer:(id)arg1 didLoadVideoInView:(id)arg2;
- (void)videoPlayer:(id)arg1 didUpdateLoadingProgress:(double)arg2;
- (void)videoPlayer:(id)arg1 didUpdatePlaybackProgress:(double)arg2;
- (void)videoPlayerBufferEmpty:(id)arg1;
- (void)videoPlayerBufferLikelyToKeepUp:(id)arg1;
- (void)videoPlayerDidFinishSeeking:(id)arg1;
- (void)videoPlayerDidPause:(id)arg1;
- (void)videoPlayerDidPlay:(id)arg1;
- (void)videoPlayerDidPlayToEnd:(id)arg1;
- (void)videoPlayerWillPrepareAssetForPlayback:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

