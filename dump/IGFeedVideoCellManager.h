//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IGFeedVideoCellPlayerDelegate.h"
#import "IGVideoPlaybackControllerDelegate.h"

@class IGCollectionViewVisibility, IGFeedItemVideoView, IGFeedPrebufferingHelper, IGFeedVideoManager, IGFeedVideoStateManager, IGFeedVideoViewSession, IGVideo, IGVideoPlaybackConfiguration, IGVideoPlaybackController, NSString, UICollectionView, UICollectionViewCell<IGFeedVideoCell>;

@interface IGFeedVideoCellManager : NSObject <IGVideoPlaybackControllerDelegate, IGFeedVideoCellPlayerDelegate>
{
    _Bool _disallowVideoStart;
    _Bool _feedIsScrolling;
    _Bool _isCurrentVideoInWatchAndAction;
    _Bool _supportsAutoplay;
    IGVideoPlaybackController *_videoPlaybackController;
    IGFeedItemVideoView *_currentlyPlayingVideoView;
    id <IGFeedVideoCellManagerDelegate> _delegate;
    IGVideo *_currentlyPlayingVideo;
    UICollectionViewCell<IGFeedVideoCell> *_currentlyPlayingVideoCell;
    IGFeedVideoViewSession *_currentVideoViewSession50percent;
    IGFeedVideoViewSession *_currentVideoViewSession100percent;
    UICollectionView *_collectionView;
    IGCollectionViewVisibility *_collectionViewVisibility;
    IGFeedPrebufferingHelper *_prebufferingHelper;
    IGVideoPlaybackConfiguration *_defaultPlaybackConfig;
    IGFeedVideoStateManager *_videoStateManager;
    IGFeedVideoManager *_feedVideoManager;
}

- (void).cxx_destruct;
- (_Bool)autoPlayAllowed;
- (_Bool)autoPlayAllowedForVideoCell:(id)arg1;
- (void)cleanUpVideoForPlayback:(id)arg1;
@property(readonly, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(readonly, nonatomic) IGCollectionViewVisibility *collectionViewVisibility; // @synthesize collectionViewVisibility=_collectionViewVisibility;
@property(retain, nonatomic) IGFeedVideoViewSession *currentVideoViewSession100percent; // @synthesize currentVideoViewSession100percent=_currentVideoViewSession100percent;
@property(retain, nonatomic) IGFeedVideoViewSession *currentVideoViewSession50percent; // @synthesize currentVideoViewSession50percent=_currentVideoViewSession50percent;
@property(retain, nonatomic) IGVideo *currentlyPlayingVideo; // @synthesize currentlyPlayingVideo=_currentlyPlayingVideo;
@property(retain, nonatomic) UICollectionViewCell<IGFeedVideoCell> *currentlyPlayingVideoCell; // @synthesize currentlyPlayingVideoCell=_currentlyPlayingVideoCell;
@property(retain, nonatomic) IGFeedItemVideoView *currentlyPlayingVideoView; // @synthesize currentlyPlayingVideoView=_currentlyPlayingVideoView;
- (void)dealloc;
@property(readonly, nonatomic) IGVideoPlaybackConfiguration *defaultPlaybackConfig; // @synthesize defaultPlaybackConfig=_defaultPlaybackConfig;
@property(nonatomic) __weak id <IGFeedVideoCellManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool disallowVideoStart; // @synthesize disallowVideoStart=_disallowVideoStart;
@property(nonatomic) _Bool feedIsScrolling; // @synthesize feedIsScrolling=_feedIsScrolling;
- (void)feedVideoCellDidLoadImage:(id)arg1;
- (void)feedVideoCellDidRequestCurrentVideoStopWithReason:(long long)arg1;
- (void)feedVideoCellDidRequestVideoPlayback:(id)arg1 config:(id)arg2;
@property(readonly, nonatomic) IGFeedVideoManager *feedVideoManager; // @synthesize feedVideoManager=_feedVideoManager;
- (void)handleFeedVideoCellDidPlayToEnd:(id)arg1;
- (_Bool)hasPausedVideo:(id)arg1;
- (id)initWithCollectionView:(id)arg1 collectionViewVisibility:(id)arg2 prebufferingHelper:(id)arg3 supportsAutoplay:(_Bool)arg4 defaultPlaybackConfiguration:(id)arg5;
@property(nonatomic) _Bool isCurrentVideoInWatchAndAction; // @synthesize isCurrentVideoInWatchAndAction=_isCurrentVideoInWatchAndAction;
- (_Bool)isFirstPost:(id)arg1;
- (_Bool)isPlayingVideoInCell:(id)arg1;
- (void)pauseVideo:(id)arg1;
@property(readonly, nonatomic) IGFeedPrebufferingHelper *prebufferingHelper; // @synthesize prebufferingHelper=_prebufferingHelper;
- (id)preferredVideoURLForVideo:(id)arg1;
- (void)prepareCellToBeDisplayed:(id)arg1;
- (void)prepareVideoForPlayback:(id)arg1;
- (void)startVideoForCell:(id)arg1 config:(id)arg2 startTime:(double)arg3;
- (_Bool)startVideoForCellIfApplicable:(id)arg1;
- (void)startVideoIfAutoplayCellExists;
- (void)stopAllVideosWithReason:(long long)arg1;
- (void)stopCurrentVideoCellIfNotVisible;
- (void)stopCurrentVideoWithReason:(long long)arg1;
- (void)stopCurrentVideoWithReason:(long long)arg1 tearDown:(_Bool)arg2;
- (void)stopVideo:(id)arg1;
@property(readonly, nonatomic) _Bool supportsAutoplay; // @synthesize supportsAutoplay=_supportsAutoplay;
- (void)timedStopVideo:(id)arg1;
- (void)updatePlayingCellScrollViewIsScrolling:(_Bool)arg1;
- (id)videoCellForAutoPlay;
@property(readonly, nonatomic) IGVideoPlaybackController *videoPlaybackController; // @synthesize videoPlaybackController=_videoPlaybackController;
- (void)videoPlaybackController:(id)arg1 didBeginPlayingItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didEndPlayingItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didFailPlayingItem:(id)arg2 error:(id)arg3;
- (void)videoPlaybackController:(id)arg1 didPauseItem:(id)arg2 reason:(unsigned long long)arg3;
- (void)videoPlaybackController:(id)arg1 didRequestPlaybackItem:(id)arg2;
@property(readonly, nonatomic) IGFeedVideoStateManager *videoStateManager; // @synthesize videoStateManager=_videoStateManager;
- (id)visibleVideoCells;
- (struct CGRect)visibleVideoRectForCell:(id)arg1 eclipsedByHeaderKind:(id)arg2 visibleContentRect:(struct CGRect)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

