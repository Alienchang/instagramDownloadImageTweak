//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class IGAnalyticsLogFileManager, IGAnalyticsSession, IGAnalyticsUploader, IGCounterEvent, IGSequenceNumberGenerator, IGTimeSpent, IGTimerEvent, NSObject<OS_dispatch_queue>, NSString, UIApplication;

@interface IGAnalyticsLogger : NSObject
{
    IGTimeSpent *_timeSpent;
    IGCounterEvent *_counter;
    IGTimerEvent *_timer;
    NSObject<OS_dispatch_queue> *_queue;
    IGAnalyticsLogFileManager *_fileManager;
    NSString *_APIKey;
    NSString *_clientToken;
    NSString *_appID;
    NSString *_deviceID;
    NSString *_deviceSoftwareVersion;
    NSString *_deviceHardwareVersion;
    NSString *_appVersion;
    _Bool _aldrinMode;
    UIApplication *_application;
    unsigned long long _lastProcessedBatchSize;
    unsigned long long _defaultChannelEventCountSinceLastBeacon;
    IGSequenceNumberGenerator *_sequenceNumberGenerator;
    IGAnalyticsSession *_session;
    IGAnalyticsUploader *_uploader;
}

- (void).cxx_destruct;
- (void)_incrementBeaconCount;
- (void)_incrementEventCount;
- (void)_logBeaconEvent:(id)arg1 sessionId:(id)arg2;
- (void)appendEventsFromSession:(id)arg1;
- (void)beginNewBatch;
- (void)beginSessionWithFacebookID:(id)arg1 userID:(id)arg2;
- (void)checkCurrentBatchSize;
- (void)doLogEvent:(id)arg1;
- (void)enableLogFileCompression;
- (void)endSession;
- (void)incrementCounter:(id)arg1 byAmount:(long long)arg2;
- (id)initWithAPIKey:(id)arg1 clientToken:(id)arg2 appID:(id)arg3 deviceID:(id)arg4 aldrinMode:(_Bool)arg5 application:(id)arg6 queue:(id)arg7 logFileDirectory:(id)arg8;
- (void)logEvent:(id)arg1;
- (void)logTimeSpentWithTimeStamp:(double)arg1;
- (void)processCurrentBatch;
- (void)recordEvent:(id)arg1 forTimer:(id)arg2 uuid:(id)arg3;
@property(readonly, nonatomic) IGAnalyticsSession *session; // @synthesize session=_session;
@property(retain, nonatomic) IGAnalyticsUploader *uploader; // @synthesize uploader=_uploader;
- (void)startTimer:(id)arg1 uuid:(id)arg2;
- (void)uploadEvents;

@end

