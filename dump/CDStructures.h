//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class FBAACEncoder, FBAACPacketizer, FBDiskVideoRecorder, FBH264Packetizer, FBRtmpSession, NSArray, NSData, NSError, NSString, NSURL, NSURLRequest;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMFObject {
    int _field1;
    struct AMFObjectProperty *_field2;
};

struct AMFObjectProperty;

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct AVCFrame;

struct AVCFrameSplitter {
    unsigned long long m_nalucount;
    unsigned long long m_framecount;
    unsigned long long m_bytecount;
    struct shared_ptr<H264SPS> m_sps;
    shared_ptr_ed0b32ac m_currframe;
};

struct AVal {
    char *_field1;
    int _field2;
};

struct AnalyticsLogger;

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct CAEAGLLayer {
    Class _field1;
    struct _CALayerIvars _field2;
    struct _CAEAGLNativeWindow *_field3;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGPointError {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CMSampleBufferSmartPtr {
    struct opaqueCMSampleBuffer *_field1;
};

struct ConnectionMonitor;

struct ConnectionQualityMonitor;

struct CountingWindow<unsigned int>;

struct DefaultBandwidthMonitor;

struct Either<NSError *, NSArray<FBManagedFileURL *>*> {
    NSError *_left;
    NSArray *_right;
    _Bool _isLeft;
};

struct Either<NSError *, int> {
    id _field1;
    struct shared_ptr<int> _field2;
    _Bool _field3;
};

struct EventBase;

struct Executor {
    CDUnknownFunctionPointerType *_field1;
};

struct FBAdaptiveBitrateConfig {
    _Bool enabled;
    int intervalInVideoFrames;
    int minBitrate;
    int maxBitrate;
    struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>>> rules;
    int statisticsWindowSize;
    double statisticsSmoothFactor;
    NSString *abrClassName;
    NSString *abrJS;
    int videoBitrateThreshold216;
    int videoBitrateThreshold288;
    int videoBitrateThreshold360;
    int videoBitrateThreshold504;
    int videoBitrateThreshold648;
    int videoBitrateThreshold720;
    int videoBitrateThreshold24fps;
};

struct FBAnimationPerformanceTrackerConfiguration {
    long long _field1;
    long long _field2;
    long long _field3;
    _Bool _field4;
};

struct FBAudioStreamingConfig {
    int sampleRate;
    int bitRate;
    int channels;
};

struct FBDeviceBatteryInfo {
    long long _field1;
    double _field2;
};

struct FBFLVFrame {
    vector_a3426c4e data;
    CDStruct_1b6d18a9 pts;
    CDStruct_1b6d18a9 dts;
    _Bool isIDR;
    _Bool isASC;
};

struct FBNetworkSpeedTestStatus {
    int state;
    double estimatedUploadBandwidthInKBps;
    unsigned long long timeTaken;
    NSArray *measurements;
    _Bool speedTestPassesThreshold;
};

struct FBPJPEGEncodingInfo {
    short _version;
    int _fileSize;
    NSArray *_scanOffsets;
};

struct FBProgressiveJPEGErrorManager {
    struct jpeg_error_mgr pub;
    int setjmp_buffer[48];
};

struct FBRtmpConnectionMeasurements {
    Optional_288eff15 tcpInfo;
    struct Optional<double> throughputUsingPing;
    struct Optional<double> initialRttUsingPing;
    struct Optional<double> rttUsingPing;
};

struct FBRtmpPingInfo;

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FBSSLKeyMaterialListenerAbstractLogger;

struct FBVideoBroadcastPipelineHolder {
    FBRtmpSession *rtmpSession;
    FBAACEncoder *audioEncoder;
    id videoEncoder;
    FBAACPacketizer *audioPacketizer;
    FBH264Packetizer *videoPacketizer;
    FBDiskVideoRecorder *diskRecorder;
};

struct FBVideoBroadcastSessionLoggingInfo {
    NSString *reason;
    NSError *error;
    _Bool remoteEnded;
};

struct FBVideoBroadcastSessionStats {
    unordered_map_9d012452 _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    double _field5;
    double _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    CDStruct_1b6d18a9 _field9;
    CDStruct_1b6d18a9 _field10;
    double _field11;
    double _field12;
    unsigned long long _field13;
};

struct FBVideoBroadcastSessionStatsInternal {
    struct FBVideoBroadcastSessionStats _field1;
    unordered_map_9d012452 _field2;
};

struct FBVideoStreamingConfig {
    int width;
    int height;
    int bitRate;
    int fps;
    int numberOfFramesInOneSegment;
    _Bool allowBFrames;
    int keyFrameInterval;
};

struct FNFAbrParameters {
    double _field1;
};

struct FNFDashAssetConfig {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    _Bool _field12;
    int _field13;
    _Bool _field14;
    unsigned int _field15;
    double _field16;
    _Bool _field17;
    _Bool _field18;
    int _field19;
    int _field20;
    _Bool _field21;
    double _field22;
    double _field23;
    double _field24;
    double _field25;
    double _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    int _field33;
};

struct FNFDashAssetPrefetchMetadata {
    _Bool isInMemoryCached;
    _Bool isPrefetched;
    unsigned long long prefetchBytesRequested;
    unsigned long long prefetchBytesReceived;
    unsigned long long prefetchLeadTimeInMS;
    _Bool isPreviouslyKnownURL;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
};

struct FNFMP4MehdAtom {
    int duration;
};

struct FNFMP4MoofAtom;

struct FNFMP4MoovAtom {
    struct FNFMP4MvhdAtom mvhdAtom;
    struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> trakAtoms;
    struct FNFMP4MvexAtom mvexAtom;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MoovAtomProvider {
    struct FNFMP4MoovAtom _moovAtom;
    unsigned long long _moovAtomSize;
    struct FNFMP4SidxAtom _sidxAtom;
    struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> _moofAtoms;
};

struct FNFMP4MvexAtom {
    struct FNFMP4MehdAtom mehdAtom;
    struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> trexAtoms;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
};

struct FNFMP4SidxAtom {
    unsigned int timescale;
    struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> segments;
};

struct FNFMP4SidxSegment;

struct FNFMP4TrakAtom;

struct FNFMP4TrakAtomForSeek;

struct FNFMP4TrexAtom;

struct FNFPlayerState {
    _Bool playingRequested;
    _Bool isPlaying;
    _Bool isStalled;
    _Bool endTimeReached;
    _Bool firstAudioFrameEnqueued;
    _Bool stoppedEnqueuingVideo;
    _Bool stoppedEnqueuingAudio;
    _Bool isFirstVideoFrame;
    _Bool recreatedLayerOnError;
    _Bool audioEngineInitialized;
    CDStruct_1b6d18a9 lastStartingTime;
    CDStruct_1b6d18a9 lastRequestedStartTime;
    CDStruct_1b6d18a9 latestEnqueuedVideoPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioDts;
    id playbackTimeObserverForAsset;
    id durationTimerForAsset;
    id stallTimerObserver;
    id sampleBufferFlushTimerObserver;
    id levelMeterTimerObserver;
    CDStruct_1b6d18a9 backgroundPauseTime;
    unsigned int sampleAudioFrameSize;
};

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct FNFTrackDownloaderState {
    NSURLRequest *urlRequest;
    unsigned long long priorOffset;
    unsigned long long bytesRequested;
    unsigned long long bytesReceived;
    unsigned long long prefetchedBytesCached;
};

struct H264SPS;

struct HTTPClientSettings {
    struct EventBase *_field1;
    struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> _field2;
    struct HTTPTransactionAdaptorFactory *_field3;
};

struct HTTPHeaders {
    struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> _field1;
    struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> _field2;
    struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned long long _field4;
};

struct HTTPRequest {
    basic_string_7c0a1c0b _field1;
    struct URL _field2;
    unsigned char _field3;
    basic_string_7c0a1c0b _field4;
    struct HTTPHeaders _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    unsigned int _field9;
    basic_string_7c0a1c0b _field10;
};

struct HTTPResponse {
    unsigned short _field1;
    basic_string_7c0a1c0b _field2;
    struct HTTPHeaders _field3;
};

struct HTTPTransactionAdaptorFactory;

struct IGAssetSelectionMechanic {
    unsigned long long options;
    unsigned long long maxSelectionCount;
};

struct IGCarouselMetrics {
    double sectionHeaderHeight;
    struct CGSize itemSize;
    struct UIEdgeInsets sectionInset;
    double minimumLineSpacing;
};

struct IGCropInfo {
    struct CGSize _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct IGDirectResponseHandleResult {
    _Bool _field1;
    long long _field2;
};

struct IGExpandableButtonLayouts {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
};

struct IGFrameSample {
    double _field1;
    double _field2;
};

struct IGGyroSample;

struct IGMemoryCacheStatistics {
    unsigned long long hits;
    unsigned long long misses;
};

struct IGOrientationSample;

struct IGOverlayViewLocationInfo {
    struct CGPoint position;
    struct CGSize size;
    struct CGPoint translation;
    double scale;
    double rotation;
};

struct IGPagingFocusOffsets {
    long long before;
    long long focused;
    long long after;
};

struct IGPerspectiveAdjustments {
    union _GLKMatrix4 transform;
    double orientationAngle;
    struct IGPerspectiveRotation rotation;
    struct IGPerspectiveCrop crop;
    struct CGSize originalSize;
};

struct IGPerspectiveCrop {
    struct CGPoint center;
    struct CGSize size;
    double zoomScale;
    double scaleRatio;
};

struct IGPerspectiveRotation {
    double x;
    double y;
    double z;
};

struct IGSectionEntry;

struct IGTigonCallbacksObserverForToken;

struct IGTigonLigerServices;

struct IGTimeInfo {
    long long _field1;
    long long _field2;
};

struct InlineSyncExecutor {
    CDUnknownFunctionPointerType *_vptr$Executor;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct JKParseToken _field10;
    struct JKObjectStack _field11;
    struct JKTokenCache _field12;
    struct JKObjCImpCache _field13;
    id _field14;
    int _field15;
    _Bool _field16;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct LigerPushNotificationCallback;

struct ModuleData;

struct MovingAverage;

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NetworkStatusMonitor {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct duration<long long, std::__1::ratio<1, 1>> _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    int _field13;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field14;
    unsigned int _field15;
    int _field16;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field17;
    unsigned int _field18;
    int _field19;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field20;
    unsigned int _field21;
    struct unique_ptr<proxygen::TimeUtilGeneric<std::__1::chrono::steady_clock>, std::__1::default_delete<proxygen::TimeUtilGeneric<std::__1::chrono::steady_clock>>> _field22;
    struct unique_ptr<proxygen::httpclient::monitor::CountingWindow<unsigned int>, std::__1::default_delete<proxygen::httpclient::monitor::CountingWindow<unsigned int>>> _field23;
    struct unique_ptr<proxygen::httpclient::monitor::ConnectionQualityMonitor, std::__1::default_delete<proxygen::httpclient::monitor::ConnectionQualityMonitor>> _field24;
    int _field25;
    int _field26;
    struct unique_ptr<proxygen::httpclient::monitor::ConnectionMonitor, std::__1::default_delete<proxygen::httpclient::monitor::ConnectionMonitor>> _field27;
    struct unique_ptr<proxygen::httpclient::monitor::DefaultBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> _field28;
    struct unique_ptr<proxygen::httpclient::monitor::RequestBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::RequestBandwidthMonitor>> _field29;
    struct unique_ptr<proxygen::httpclient::monitor::RequestMonitor, std::__1::default_delete<proxygen::httpclient::monitor::RequestMonitor>> _field30;
    struct unique_ptr<proxygen::httpclient::AnalyticsLogger, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> _field31;
    struct unique_ptr<proxygen::httpclient::monitor::RadioMonitor, std::__1::default_delete<proxygen::httpclient::monitor::RadioMonitor>> _field32;
    struct unique_ptr<proxygen::httpclient::monitor::NetworkTracer, std::__1::default_delete<proxygen::httpclient::monitor::NetworkTracer>> _field33;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field34;
    struct Optional<bool> _field35;
};

struct NetworkTracer;

struct ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper> {
    struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> _field1;
};

struct ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>;

struct ObserverToken;

struct Optional<FBPJPEGEncodingInfo> {
    struct StorageNonTriviallyDestructible storage_;
};

struct Optional<bool> {
    struct StorageTriviallyDestructible {
        union {
            _Bool _field1;
            struct {
                _Bool _field1[1];
                _Bool _field2;
            } _field2;
        } _field1;
    } _field1;
};

struct Optional<double> {
    struct StorageTriviallyDestructible {
        union {
            _Bool hasValue;
            struct {
                _Bool paddingForHasValue_[1];
                double value;
            } ;
        } ;
    } storage_;
};

struct Optional<facebook::tcp::TCPInfo> {
    struct StorageTriviallyDestructible {
        union {
            _Bool hasValue;
            struct {
                _Bool paddingForHasValue_[1];
                struct TCPInfo {
                    long long t_dupacks;
                    long long t_state;
                    long long t_flags;
                    long long t_force;
                    long long snd_una;
                    long long snd_max;
                    long long snd_nxt;
                    long long snd_up;
                    long long snd_wl1;
                    long long snd_wl2;
                    long long iss;
                    long long irs;
                    long long rcv_nxt;
                    long long rcv_adv;
                    long long rcv_wnd;
                    long long rcv_up;
                    long long snd_wnd;
                    long long snd_cwnd;
                    long long snd_ssthresh;
                    long long t_maxopd;
                    long long t_rcvtime;
                    long long t_starttime;
                    long long t_rtttime;
                    long long t_rtseq;
                    long long t_rxtcur;
                    long long t_maxseg;
                    long long t_srtt;
                    long long t_rttvar;
                    long long t_rxtshift;
                    long long t_rttmin;
                    long long t_rttupdated;
                    long long max_sndwnd;
                    long long t_softerror;
                    char t_oobflags;
                    char t_iobc;
                    long long snd_scale;
                    long long rcv_scale;
                    long long request_r_scale;
                    long long requested_s_scale;
                    long long ts_recent;
                    long long ts_recent_age;
                    long long last_ack_sent;
                    long long cc_send;
                    long long cc_recv;
                    long long snd_recover;
                    long long snd_cwnd_prev;
                    long long snd_ssthresh_prev;
                    long long t_badrxtwin;
                    long long snd_sbbytes;
                    long long rtt;
                    long long rttvar;
                } value;
            } ;
        } ;
    } storage_;
};

struct POPAnimatorItem;

struct Promise<FB::Functional::Either<NSError *, NSArray<FBManagedFileURL *>*>>;

struct PromiseEither<NSError *, FBManagedFileURL *>;

struct PromiseEither<NSError *, NSArray<FBManagedFileURL *>*> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, NSArray<FBManagedFileURL *>*>>> _field1;
};

struct RCTJSContextData {
    _Bool _field1;
    _Bool _field2;
    id _field3;
    id _field4;
};

struct RTMP {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    int _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
    unsigned char _field17;
    int _field18;
    int _field19;
    struct RTMP_METHOD *_field20;
    int _field21;
    int _field22;
    struct RTMPPacket **_field23;
    struct RTMPPacket **_field24;
    int *_field25;
    double _field26;
    double _field27;
    double _field28;
    double _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    struct AVal _field34;
    struct RTMP_READ _field35;
    struct RTMPPacket _field36;
    struct RTMPSockBuf _field37;
    struct RTMP_LNK _field38;
    void *_field39;
    int _field40;
    struct RTMP_CUSTOMIZATION _field41;
};

struct RTMPChunk;

struct RTMPPacket {
    unsigned char m_headerType;
    unsigned char m_packetType;
    unsigned char m_hasAbsTimestamp;
    int m_nChannel;
    unsigned int m_nTimeStamp;
    int m_nInfoField2;
    unsigned int m_nBodySize;
    unsigned int m_nBytesRead;
    struct RTMPChunk *m_chunk;
    char *m_body;
};

struct RTMPSockBuf {
    int _field1;
    int _field2;
    char *_field3;
    char _field4[16384];
    int _field5;
    void *_field6;
};

struct RTMP_CUSTOMIZATION {
    struct RTMP_ON_NETWORK_CONNECTED _field1;
    struct RTMP_SSL_FACTORY _field2;
};

struct RTMP_LNK {
    struct AVal _field1;
    struct AVal _field2;
    struct AVal _field3;
    struct AVal _field4;
    struct AVal _field5;
    struct AVal _field6;
    struct AVal _field7;
    struct AVal _field8;
    struct AVal _field9;
    struct AVal _field10;
    struct AVal _field11;
    struct AVal _field12;
    struct AVal _field13;
    struct AVal _field14;
    struct AVal _field15;
    struct AMFObject _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    unsigned short _field25;
    unsigned short _field26;
    void *_field27;
    void *_field28;
    void *_field29;
    unsigned int _field30;
    unsigned char _field31[32];
    char _field32[42];
};

struct RTMP_METHOD;

struct RTMP_ON_NETWORK_CONNECTED {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct RTMP_OnConnectContext {
    struct RTMP *rtmp;
    NSData *connectionToken;
};

struct RTMP_READ {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned char _field5;
    unsigned char _field6;
    char _field7;
    unsigned char _field8;
    unsigned int _field9;
    char *_field10;
    char *_field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct RTMP_SSL_FACTORY {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct RadioMonitor;

struct RandomAccessBundleData {
    struct unique_ptr<__sFILE, int (*)(__sFILE *)> bundle;
    unsigned long long baseOffset;
    unsigned long long numTableEntries;
    struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> table;
};

struct ReachabilityAnnouncer;

struct RequestBandwidthMonitor;

struct RequestHandlerFactory;

struct RequestMonitor;

struct RequestStats {
    vector_31c84f95 _field1;
};

struct RtmpSSLConnectionContext;

struct RtmpSSLFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SimpleVideoRecorder;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct Stats {
    unsigned long long framesSent;
    unsigned long long totalFrames;
    unsigned long long timestamp;
};

struct StorageNonTriviallyDestructible {
    union {
        _Bool hasValue;
        struct {
            _Bool paddingForHasValue_[1];
            struct FBPJPEGEncodingInfo value;
        } ;
    } ;
};

struct StreamingReachabilityEvent;

struct TigonHTTPHeader;

struct TigonLigerServicePolicy {
    _Bool _field1;
    _Bool _field2;
};

struct TigonPriorityData {
    short _field1;
    unsigned short _field2;
};

struct TigonRequest {
    struct unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>> _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    struct vector<facebook::tigon::TigonHTTPHeader, std::__1::allocator<facebook::tigon::TigonHTTPHeader>> _field4;
    struct TigonPriorityData _field5;
};

struct TigonRequestToken;

struct TigonService {
    CDUnknownFunctionPointerType *_field1;
};

struct TimeUtilGeneric<std::__1::chrono::steady_clock>;

struct TraceEvent;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIEvent {
    Class _field1;
};

struct UIImage {
    Class _field1;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct URL {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    unsigned short _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    _Bool _field8;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct WeakHolder {
    id _field1;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _CAEAGLNativeWindow;

struct _CALayerIvars {
    int _field1;
    unsigned int _field2;
    void *_field3;
};

struct _CPTEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _CPTGradientElement {
    struct _CPTRGBAColor _field1;
    double _field2;
    struct _CPTGradientElement *_field3;
};

struct _CPTImageSlices {
    struct CGImage *slice[9];
};

struct _CPTNumericDataType {
    long long dataTypeFormat;
    unsigned long long sampleBytes;
    long long byteOrder;
};

struct _CPTRGBAColor {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _GLKMatrix4 {
    float m[16];
};

struct _GLKVector2 {
    float _field1[2];
};

struct _GLKVector4 {
    float _field1[4];
};

struct _IGRange {
    double location;
    double length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>> {
    struct __hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *> *_field1;
    } _field1;
};

struct __hash_node<_IGListWorkingRangeHandlerIndexPath, void *>;

struct __hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>;

struct __hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>;

struct __hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>;

struct __hash_node<std::__1::basic_string<char>, void *>;

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _ftsent;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct allocator<IGGyroSample>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct circular_buffer<IGGyroSample, std::__1::allocator<IGGyroSample>> {
    struct IGGyroSample *m_buff;
    struct IGGyroSample *m_end;
    struct IGGyroSample *m_first;
    struct IGGyroSample *m_last;
    unsigned long long m_size;
    struct allocator<IGGyroSample> m_alloc;
};

struct deque<FBFLVFrame, std::__1::allocator<FBFLVFrame>> {
    struct __split_buffer<FBFLVFrame *, std::__1::allocator<FBFLVFrame *>> {
        struct FBFLVFrame **__first_;
        struct FBFLVFrame **__begin_;
        struct FBFLVFrame **__end_;
        struct __compressed_pair<FBFLVFrame **, std::__1::allocator<FBFLVFrame *>> {
            struct FBFLVFrame **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<FBFLVFrame>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<FBRtmpPingInfo, std::__1::allocator<FBRtmpPingInfo>> {
    struct __split_buffer<FBRtmpPingInfo *, std::__1::allocator<FBRtmpPingInfo *>> {
        struct FBRtmpPingInfo **__first_;
        struct FBRtmpPingInfo **__begin_;
        struct FBRtmpPingInfo **__end_;
        struct __compressed_pair<FBRtmpPingInfo **, std::__1::allocator<FBRtmpPingInfo *>> {
            struct FBRtmpPingInfo **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<FBRtmpPingInfo>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<opaqueCMSampleBuffer *, std::__1::allocator<opaqueCMSampleBuffer *>> {
    struct __split_buffer<opaqueCMSampleBuffer **, std::__1::allocator<opaqueCMSampleBuffer **>> {
        struct opaqueCMSampleBuffer ***__first_;
        struct opaqueCMSampleBuffer ***__begin_;
        struct opaqueCMSampleBuffer ***__end_;
        struct __compressed_pair<opaqueCMSampleBuffer ***, std::__1::allocator<opaqueCMSampleBuffer **>> {
            struct opaqueCMSampleBuffer ***__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<opaqueCMSampleBuffer *>> {
        unsigned long long __first_;
    } __size_;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct duration<long long, std::__1::ratio<1, 1>> {
    long long _field1;
};

struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> {
    struct Impl {
        basic_string_7c0a1c0b **_field1;
        basic_string_7c0a1c0b **_field2;
        basic_string_7c0a1c0b **_field3;
    } _field1;
};

struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> {
    struct Impl {
        unsigned char *_field1;
        unsigned char *_field2;
        unsigned char *_field3;
    } _field1;
};

struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct Impl {
        basic_string_7c0a1c0b *_field1;
        basic_string_7c0a1c0b *_field2;
        basic_string_7c0a1c0b *_field3;
    } _field1;
};

struct function<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> {
    struct type __buf_;
    struct __base<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> *__f_;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct jpeg_color_deconverter;

struct jpeg_color_quantizer;

struct jpeg_d_coef_controller;

struct jpeg_d_main_controller;

struct jpeg_d_post_controller;

struct jpeg_decomp_master;

struct jpeg_decompress_struct {
    struct jpeg_error_mgr *err;
    struct jpeg_memory_mgr *mem;
    struct jpeg_progress_mgr *progress;
    void *client_data;
    int is_decompressor;
    int global_state;
    struct jpeg_source_mgr *src;
    unsigned int image_width;
    unsigned int image_height;
    int num_components;
    int jpeg_color_space;
    int out_color_space;
    unsigned int scale_num;
    unsigned int scale_denom;
    double output_gamma;
    int buffered_image;
    int raw_data_out;
    int dct_method;
    int do_fancy_upsampling;
    int do_block_smoothing;
    int quantize_colors;
    int dither_mode;
    int two_pass_quantize;
    int desired_number_of_colors;
    int enable_1pass_quant;
    int enable_external_quant;
    int enable_2pass_quant;
    unsigned int output_width;
    unsigned int output_height;
    int out_color_components;
    int output_components;
    int rec_outbuf_height;
    int actual_number_of_colors;
    char **colormap;
    unsigned int output_scanline;
    int input_scan_number;
    unsigned int input_iMCU_row;
    int output_scan_number;
    unsigned int output_iMCU_row;
    int (*coef_bits)[64];
    CDStruct_183601bc *quant_tbl_ptrs[4];
    CDStruct_183601bc *dc_huff_tbl_ptrs[4];
    CDStruct_183601bc *ac_huff_tbl_ptrs[4];
    int data_precision;
    CDStruct_183601bc *comp_info;
    int is_baseline;
    int progressive_mode;
    int arith_code;
    unsigned char arith_dc_L[16];
    unsigned char arith_dc_U[16];
    unsigned char arith_ac_K[16];
    unsigned int restart_interval;
    int saw_JFIF_marker;
    unsigned char JFIF_major_version;
    unsigned char JFIF_minor_version;
    unsigned char density_unit;
    unsigned short X_density;
    unsigned short Y_density;
    int saw_Adobe_marker;
    unsigned char Adobe_transform;
    int CCIR601_sampling;
    struct jpeg_marker_struct *marker_list;
    int max_h_samp_factor;
    int max_v_samp_factor;
    int min_DCT_h_scaled_size;
    int min_DCT_v_scaled_size;
    unsigned int total_iMCU_rows;
    char *sample_range_limit;
    int comps_in_scan;
    CDStruct_183601bc *cur_comp_info[4];
    unsigned int MCUs_per_row;
    unsigned int MCU_rows_in_scan;
    int blocks_in_MCU;
    int MCU_membership[10];
    int Ss;
    int Se;
    int Ah;
    int Al;
    int block_size;
    int *natural_order;
    int lim_Se;
    int unread_marker;
    struct jpeg_decomp_master *master;
    struct jpeg_d_main_controller *main;
    struct jpeg_d_coef_controller *coef;
    struct jpeg_d_post_controller *post;
    struct jpeg_input_controller *inputctl;
    struct jpeg_marker_reader *marker;
    struct jpeg_entropy_decoder *entropy;
    struct jpeg_inverse_dct *idct;
    struct jpeg_upsampler *upsample;
    struct jpeg_color_deconverter *cconvert;
    struct jpeg_color_quantizer *cquantize;
};

struct jpeg_entropy_decoder;

struct jpeg_error_mgr {
    CDUnknownFunctionPointerType error_exit;
    CDUnknownFunctionPointerType emit_message;
    CDUnknownFunctionPointerType output_message;
    CDUnknownFunctionPointerType format_message;
    CDUnknownFunctionPointerType reset_error_mgr;
    int msg_code;
    union {
        int i[8];
        char s[80];
    } msg_parm;
    int trace_level;
    long long num_warnings;
    char **jpeg_message_table;
    int last_jpeg_message;
    char **addon_message_table;
    int first_addon_message;
    int last_addon_message;
};

struct jpeg_input_controller;

struct jpeg_inverse_dct;

struct jpeg_marker_reader;

struct jpeg_marker_struct;

struct jpeg_memory_mgr;

struct jpeg_progress_mgr;

struct jpeg_source_mgr;

struct jpeg_upsampler;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct opaqueCMSampleBuffer;

struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>;

struct quat<double>;

struct set<std::__1::pair<double, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>, std::__1::allocator<std::__1::pair<double, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::pair<double, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>, std::__1::allocator<std::__1::pair<double, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::pair<double, std::__1::basic_string<char>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<double, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<(anonymous namespace)::StreamingReachabilityEvent> {
    struct StreamingReachabilityEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<AVCFrame> {
    struct AVCFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Functional::PromiseEither<NSError *, NSArray<FBManagedFileURL *>*>> {
    PromiseEither_397cdb38 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, NSArray<FBManagedFileURL *>*>>> {
    struct Promise<FB::Functional::Either<NSError *, NSArray<FBManagedFileURL *>*>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<H264SPS> {
    struct H264SPS *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<IGTigonCallbacksObserverForToken> {
    struct IGTigonCallbacksObserverForToken *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const std::__1::vector<__weak id, std::__1::allocator<__weak id>>> {
    struct vector<__weak id, std::__1::allocator<__weak id>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::liger::LigerPushNotificationCallback> {
    struct LigerPushNotificationCallback *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::FBSSLKeyMaterialListenerAbstractLogger> {
    struct FBSSLKeyMaterialListenerAbstractLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> {
    struct ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::statistics::MovingAverage> {
    struct MovingAverage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::tigon::TigonService> {
    struct TigonService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<int> {
    int *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::basic_string<char>> {
    basic_string_7c0a1c0b *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>>> {
    struct vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_storage {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[6];
    long long _field4;
    char _field5[112];
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<IGTigonLigerServices, std::__1::default_delete<IGTigonLigerServices>> {
    struct __compressed_pair<IGTigonLigerServices *, std::__1::default_delete<IGTigonLigerServices>> {
        struct IGTigonLigerServices *__first_;
    } __ptr_;
};

struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> {
    struct __compressed_pair<ModuleData *, std::__1::default_delete<ModuleData []>> {
        struct ModuleData *__first_;
    } __ptr_;
};

struct unique_ptr<__sFILE, int (*)(__sFILE *)> {
    struct __compressed_pair<__sFILE *, int (*)(__sFILE *)> {
        struct __sFILE *__first_;
        CDUnknownFunctionPointerType __second_;
    } __ptr_;
};

struct unique_ptr<facebook::livestreaming::RtmpSSLConnectionContext, std::__1::default_delete<facebook::livestreaming::RtmpSSLConnectionContext>> {
    struct __compressed_pair<facebook::livestreaming::RtmpSSLConnectionContext *, std::__1::default_delete<facebook::livestreaming::RtmpSSLConnectionContext>> {
        struct RtmpSSLConnectionContext *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
        struct ObserverToken *_field1;
    } _field1;
};

struct unique_ptr<facebook::tigon::TigonRequestToken, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
    struct __compressed_pair<facebook::tigon::TigonRequestToken *, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
        struct TigonRequestToken *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::tigon::TigonService, std::__1::default_delete<facebook::tigon::TigonService>> {
    struct __compressed_pair<facebook::tigon::TigonService *, std::__1::default_delete<facebook::tigon::TigonService>> {
        struct TigonService *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::TimeUtilGeneric<std::__1::chrono::steady_clock>, std::__1::default_delete<proxygen::TimeUtilGeneric<std::__1::chrono::steady_clock>>> {
    struct __compressed_pair<proxygen::TimeUtilGeneric<std::__1::chrono::steady_clock>*, std::__1::default_delete<proxygen::TimeUtilGeneric<std::__1::chrono::steady_clock>>> {
        struct TimeUtilGeneric<std::__1::chrono::steady_clock> *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::AnalyticsLogger, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> {
    struct __compressed_pair<proxygen::httpclient::AnalyticsLogger *, std::__1::default_delete<proxygen::httpclient::AnalyticsLogger>> {
        struct AnalyticsLogger *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
    struct __compressed_pair<proxygen::httpclient::RequestHandlerFactory *, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
        struct RequestHandlerFactory *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::ConnectionMonitor, std::__1::default_delete<proxygen::httpclient::monitor::ConnectionMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::ConnectionMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::ConnectionMonitor>> {
        struct ConnectionMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::ConnectionQualityMonitor, std::__1::default_delete<proxygen::httpclient::monitor::ConnectionQualityMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::ConnectionQualityMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::ConnectionQualityMonitor>> {
        struct ConnectionQualityMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::CountingWindow<unsigned int>, std::__1::default_delete<proxygen::httpclient::monitor::CountingWindow<unsigned int>>> {
    struct __compressed_pair<proxygen::httpclient::monitor::CountingWindow<unsigned int>*, std::__1::default_delete<proxygen::httpclient::monitor::CountingWindow<unsigned int>>> {
        struct CountingWindow<unsigned int> *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::DefaultBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::DefaultBandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
        struct DefaultBandwidthMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::NetworkTracer, std::__1::default_delete<proxygen::httpclient::monitor::NetworkTracer>> {
    struct __compressed_pair<proxygen::httpclient::monitor::NetworkTracer *, std::__1::default_delete<proxygen::httpclient::monitor::NetworkTracer>> {
        struct NetworkTracer *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::RadioMonitor, std::__1::default_delete<proxygen::httpclient::monitor::RadioMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::RadioMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::RadioMonitor>> {
        struct RadioMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::RequestBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::RequestBandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::RequestBandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::RequestBandwidthMonitor>> {
        struct RequestBandwidthMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::RequestMonitor, std::__1::default_delete<proxygen::httpclient::monitor::RequestMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::RequestMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::RequestMonitor>> {
        struct RequestMonitor *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>>> {
        struct __hash_node<_IGListWorkingRangeHandlerIndexPath, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>>> {
        struct __hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::basic_string<char>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::basic_string<char>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> {
        struct __hash_node<std::__1::basic_string<char>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<Class<IGUserSessionObject>, std::__1::shared_future<Value>, std::__1::hash<Class<IGUserSessionObject>>, std::__1::equal_to<Class<IGUserSessionObject>>, std::__1::allocator<std::__1::pair<const Class<IGUserSessionObject>, std::__1::shared_future<Value>>>> {
    struct __hash_table<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::__unordered_map_hasher<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::hash<Class<IGUserSessionObject>>, true>, std::__1::__unordered_map_equal<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::equal_to<Class<IGUserSessionObject>>, true>, std::__1::allocator<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::hash<Class<IGUserSessionObject>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::equal_to<Class<IGUserSessionObject>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, facebook::tigon::details::CharHash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, facebook::tigon::details::CharCompare, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, facebook::tigon::details::CharHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>, facebook::tigon::details::CharCompare, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, double>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, IGListMoveIndex *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
                struct __hash_node<_IGListWorkingRangeHandlerIndexPath, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
                struct __hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::basic_string<char>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
                struct __hash_node<std::__1::basic_string<char>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<FB::Functional::PromiseEither<NSError *, FBManagedFileURL *>, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBManagedFileURL *>>> {
    struct PromiseEither<NSError *, FBManagedFileURL *> *__begin_;
    struct PromiseEither<NSError *, FBManagedFileURL *> *__end_;
    struct __compressed_pair<FB::Functional::PromiseEither<NSError *, FBManagedFileURL *>*, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBManagedFileURL *>>> {
        struct PromiseEither<NSError *, FBManagedFileURL *> *__first_;
    } __end_cap_;
};

struct vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>>;

struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> {
    struct FNFMP4MoofAtom *__begin_;
    struct FNFMP4MoofAtom *__end_;
    struct __compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom>> {
        struct FNFMP4MoofAtom *__first_;
    } __end_cap_;
};

struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> {
    struct FNFMP4SidxSegment *__begin_;
    struct FNFMP4SidxSegment *__end_;
    struct __compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment>> {
        struct FNFMP4SidxSegment *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> {
    struct FNFMP4TrakAtom *__begin_;
    struct FNFMP4TrakAtom *__end_;
    struct __compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom>> {
        struct FNFMP4TrakAtom *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> {
    struct FNFMP4TrexAtom *__begin_;
    struct FNFMP4TrexAtom *__end_;
    struct __compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom>> {
        struct FNFMP4TrexAtom *__first_;
    } __end_cap_;
};

struct vector<IGFrameSample, std::__1::allocator<IGFrameSample>> {
    struct IGFrameSample *__begin_;
    struct IGFrameSample *__end_;
    struct __compressed_pair<IGFrameSample *, std::__1::allocator<IGFrameSample>> {
        struct IGFrameSample *__first_;
    } __end_cap_;
};

struct vector<IGGyroSample, std::__1::allocator<IGGyroSample>> {
    struct IGGyroSample *__begin_;
    struct IGGyroSample *__end_;
    struct __compressed_pair<IGGyroSample *, std::__1::allocator<IGGyroSample>> {
        struct IGGyroSample *__first_;
    } __end_cap_;
};

struct vector<IGOrientationSample, std::__1::allocator<IGOrientationSample>> {
    struct IGOrientationSample *__begin_;
    struct IGOrientationSample *__end_;
    struct __compressed_pair<IGOrientationSample *, std::__1::allocator<IGOrientationSample>> {
        struct IGOrientationSample *__first_;
    } __end_cap_;
};

struct vector<IGSectionEntry, std::__1::allocator<IGSectionEntry>> {
    struct IGSectionEntry *__begin_;
    struct IGSectionEntry *__end_;
    struct __compressed_pair<IGSectionEntry *, std::__1::allocator<IGSectionEntry>> {
        struct IGSectionEntry *__first_;
    } __end_cap_;
};

struct vector<__weak id, std::__1::allocator<__weak id>>;

struct vector<boost::qvm::quat<double>, std::__1::allocator<boost::qvm::quat<double>>> {
    struct quat<double> *__begin_;
    struct quat<double> *__end_;
    struct __compressed_pair<boost::qvm::quat<double>*, std::__1::allocator<boost::qvm::quat<double>>> {
        struct quat<double> *__first_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<facebook::tigon::TigonHTTPHeader, std::__1::allocator<facebook::tigon::TigonHTTPHeader>> {
    struct TigonHTTPHeader *_field1;
    struct TigonHTTPHeader *_field2;
    struct __compressed_pair<facebook::tigon::TigonHTTPHeader *, std::__1::allocator<facebook::tigon::TigonHTTPHeader>> {
        struct TigonHTTPHeader *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>>> {
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters> *__begin_;
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters> *__end_;
    struct __compressed_pair<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>*, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters>>> {
        struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, FBAdaptiveBitrateControlParameters> *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
    shared_ptr_9c840082 *__begin_;
    shared_ptr_9c840082 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>*, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
        shared_ptr_9c840082 *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<double, std::__1::allocator<double>>, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double>>>> {
    vector_3f7ffb82 *__begin_;
    vector_3f7ffb82 *__end_;
    struct __compressed_pair<std::__1::vector<double, std::__1::allocator<double>>*, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double>>>> {
        vector_3f7ffb82 *__first_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_67dca217;

typedef struct {
    union _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_8081ab9f;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
} CDStruct_183fa7cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
} CDStruct_59d36ef3;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:18;
    unsigned short _mantissa[8];
} CDStruct_6ece915e;

typedef struct {
    double fieldOfView;
    double aspectRatio;
    double gyroDelay;
    double shutterSpeed;
    char gyroOrientation[3];
} CDStruct_c91b0ade;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
} CDStruct_0ddf8746;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int sendHardTimeoutMsec;
    int sendCheckTimeoutMsec;
    int queueCapacityInBytes;
    double queueVideoCapacityInSeconds;
    int percentageOfCapacityToDrop;
    int connectionRetryCount;
    int connectionRetryDelay;
    int speedTestPayloadSize;
    int speedTestPayloadChunkSize;
    int speedTestWaitResponseTimeoutInSeconds;
    unsigned long long measurementsIntervalInMs;
    double speedTestMinimumBandwidthThreshold;
    int speedTestRetryMaxCount;
    double speedTestRetryTimeDelay;
    _Bool speedTestDisable;
    _Bool shouldProbeRTTWithPings;
    _Bool useSSLFactory;
} CDStruct_99bf5ac3;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned long long defaultMallocBytes;
    unsigned long long webKitBytes;
    unsigned long long customJSCMallocBytes;
    unsigned long long customJSCGCHeapBytes;
    unsigned long long drawRectBytes;
    unsigned long long bitmapBytes;
    unsigned long long decodedImageBytes;
    unsigned long long ioKitBytes;
    struct {
        unsigned long long size;
        unsigned long long rss;
        unsigned long long swap;
    } textSection;
} CDStruct_914a7591;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    int availableSpaceThresholdInMB;
    double checkAvailableSpaceIntervalInSeconds;
    double movieFragmentIntervalInSeconds;
    struct FBVideoStreamingConfig videoConfig;
    struct FBAudioStreamingConfig audioConfig;
} CDStruct_1eba69ef;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_2b0c6e0b;

typedef struct {
    union _GLKVector4 _field1;
    union _GLKVector4 _field2;
    float _field3;
    float _field4;
} CDStruct_4c2bb342;

typedef struct {
    union _GLKVector4 _field1;
    union _GLKVector4 _field2;
} CDStruct_8aefd972;

typedef struct {
    NSURL *url;
    NSString *base64ConnectionToken;
    struct FBAudioStreamingConfig audioConfig;
    struct FBVideoStreamingConfig videoConfig;
    CDStruct_99bf5ac3 networkConfig;
    struct {
        double exponentialAverageDecayConstant;
    } throughputMonitorConfig;
    struct FBAdaptiveBitrateConfig adaptiveBitrateConfig;
    struct {
        int excellentConnectionMaxBitrate;
        int goodConnectionMaxBitrate;
        int moderateConnectionMaxBitrate;
        int poorConnectionMaxBitrate;
    } maxBitrateConfig;
    CDStruct_1eba69ef diskRecordingConfig;
    _Bool recordOnDisk;
    int sendStreamInterruptedIntervalInSeconds;
    _Bool streamRemoveGapsInTimestamps;
} CDStruct_315660d5;

// Ambiguous groups
typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct Either<NSError *, NSArray<FBManagedFileURL *>*> {
    NSError *_left;
    NSArray *_right;
    _Bool _isLeft;
} Either_a60ba739;

typedef struct Either<NSError *, int> {
    id _field1;
    struct shared_ptr<int> _field2;
    _Bool _field3;
} Either_78a561d3;

typedef struct ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper> {
    struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> _field1;
} ObservableHelper_eeb51dca;

typedef struct Optional<facebook::tcp::TCPInfo> {
    struct StorageTriviallyDestructible {
        union {
            _Bool hasValue;
            struct {
                _Bool paddingForHasValue_[1];
                struct TCPInfo {
                    long long t_dupacks;
                    long long t_state;
                    long long t_flags;
                    long long t_force;
                    long long snd_una;
                    long long snd_max;
                    long long snd_nxt;
                    long long snd_up;
                    long long snd_wl1;
                    long long snd_wl2;
                    long long iss;
                    long long irs;
                    long long rcv_nxt;
                    long long rcv_adv;
                    long long rcv_wnd;
                    long long rcv_up;
                    long long snd_wnd;
                    long long snd_cwnd;
                    long long snd_ssthresh;
                    long long t_maxopd;
                    long long t_rcvtime;
                    long long t_starttime;
                    long long t_rtttime;
                    long long t_rtseq;
                    long long t_rxtcur;
                    long long t_maxseg;
                    long long t_srtt;
                    long long t_rttvar;
                    long long t_rxtshift;
                    long long t_rttmin;
                    long long t_rttupdated;
                    long long max_sndwnd;
                    long long t_softerror;
                    char t_oobflags;
                    char t_iobc;
                    long long snd_scale;
                    long long rcv_scale;
                    long long request_r_scale;
                    long long requested_s_scale;
                    long long ts_recent;
                    long long ts_recent_age;
                    long long last_ack_sent;
                    long long cc_send;
                    long long cc_recv;
                    long long snd_recover;
                    long long snd_cwnd_prev;
                    long long snd_ssthresh_prev;
                    long long t_badrxtwin;
                    long long snd_sbbytes;
                    long long rtt;
                    long long rttvar;
                } value;
            } ;
        } ;
    } storage_;
} Optional_288eff15;

typedef struct PromiseEither<NSError *, NSArray<FBManagedFileURL *>*> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, NSArray<FBManagedFileURL *>*>>> _field1;
} PromiseEither_397cdb38;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct __hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*>> {
    struct __hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *>*> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::pair<FBRunningWindowStatistcs, std::__1::shared_ptr<facebook::mobile::xplat::statistics::MovingAverage>>>, void *> *_field1;
    } _field1;
} __hash_map_iterator_92777946;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct deque<FBFLVFrame, std::__1::allocator<FBFLVFrame>> {
    struct __split_buffer<FBFLVFrame *, std::__1::allocator<FBFLVFrame *>> {
        struct FBFLVFrame **__first_;
        struct FBFLVFrame **__begin_;
        struct FBFLVFrame **__end_;
        struct __compressed_pair<FBFLVFrame **, std::__1::allocator<FBFLVFrame *>> {
            struct FBFLVFrame **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<FBFLVFrame>> {
        unsigned long long __first_;
    } __size_;
} deque_afc9fbd3;

typedef struct function<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> {
    struct type __buf_;
    struct __base<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> *__f_;
} function_5936182b;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_d002bffb;

typedef struct shared_ptr<AVCFrame> {
    struct AVCFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ed0b32ac;

typedef struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_44918ef6;

typedef struct shared_ptr<IGTigonCallbacksObserverForToken> {
    struct IGTigonCallbacksObserverForToken *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_848cdc37;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<facebook::liger::LigerPushNotificationCallback> {
    struct LigerPushNotificationCallback *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1dbe9edf;

typedef struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f32f4099;

typedef struct shared_ptr<facebook::mobile::FBSSLKeyMaterialListenerAbstractLogger> {
    struct FBSSLKeyMaterialListenerAbstractLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1317cc0b;

typedef struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d61e43bb;

typedef struct shared_ptr<facebook::mobile::xplat::statistics::MovingAverage> {
    struct MovingAverage *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0599e543;

typedef struct shared_ptr<facebook::tigon::TigonService> {
    struct TigonService *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_05689265;

typedef struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9c840082;

typedef struct shared_ptr<std::__1::basic_string<char>> {
    basic_string_7c0a1c0b *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_aecb8741;

typedef struct shared_ptr<std::__1::vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>>> {
    struct vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_896bc00e;

typedef struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
        struct ObserverToken *_field1;
    } _field1;
} unique_ptr_b889f52c;

typedef struct unique_ptr<facebook::tigon::TigonRequestToken, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
    struct __compressed_pair<facebook::tigon::TigonRequestToken *, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
        struct TigonRequestToken *__first_;
    } __ptr_;
} unique_ptr_175e7612;

typedef struct unique_ptr<facebook::tigon::TigonService, std::__1::default_delete<facebook::tigon::TigonService>> {
    struct __compressed_pair<facebook::tigon::TigonService *, std::__1::default_delete<facebook::tigon::TigonService>> {
        struct TigonService *__first_;
    } __ptr_;
} unique_ptr_e9d5c0d2;

typedef struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, double>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_9d012452;

typedef struct unordered_map<unsigned long, IGListMoveIndex *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, IGListMoveIndex *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_e7911709;

typedef struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::basic_string<char>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
                struct __hash_node<std::__1::basic_string<char>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_f8150d86;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
} vector_b5bccc4d;

typedef struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
} vector_31c84f95;

typedef struct vector<std::__1::vector<double, std::__1::allocator<double>>, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double>>>> {
    vector_3f7ffb82 *__begin_;
    vector_3f7ffb82 *__end_;
    struct __compressed_pair<std::__1::vector<double, std::__1::allocator<double>>*, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double>>>> {
        vector_3f7ffb82 *__first_;
    } __end_cap_;
} vector_3c8d5da9;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
} vector_a3426c4e;

#pragma mark Named Unions

union _GLKMatrix2 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field1;
    float _field2[2][2];
    float _field3[4];
};

union _GLKMatrix3 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKQuaternion {
    struct {
        union _GLKVector3 _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
    float _field3[4];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

